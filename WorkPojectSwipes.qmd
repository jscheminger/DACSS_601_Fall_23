---
title: "CardSwipes"
author: "J.Scheminger"
description: ""
date: "10/4/2023"
format:
  html:
    df-print: paged
    css: "styles.css"
    embed-resources: true
    self-contained-math: true
categories:
  - weekly_challenges
  - challenge_3
---

**Make sure you change the author's name in the above YAML header.**

## Setup

If you have not installed the following packages, please install them before loading them.

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(readxl)
library(haven) #for loading other datafiles (SAS, STATA, SPSS, etc.)
library(stringr) # if you have not installed this package, please install it.
library(lubridate)
knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview


```{r}
#Type your code here

Oct_swipe <- read.csv('_data/Oct_2023r1.csv')
as_tibble(Oct_swipe)

Calen_2324 <- read.csv('_data/Calendar23_24.csv')
as_tibble(Calen_2324)

Oct_swipe2 <- left_join(Oct_swipe, Calen_2324, Date)


```



    ```{r}
    #Type your code here
    ```

    \(4\) Save the joined data *ESS_Polity* to your local directory using the following code. We will be using this joined data to explore visualization in future challenges.

    ```{r}
    #write_csv(ESS_Polity, "ESS_Polity.csv")


    ```

4.  **Describe the data structure of the newly joined data *ESS_Polity*. What is its dimension (# of rows and \# of columns)? What is its unit of observation? Compared to the original ESS_5 data, does the above data combination change the dimension and unit of observation?**

    ```{r}
    #Type your code here
    ```

5.  **(Optional) Suppose our focus is studying regimes and governments in different countries (Polity V data). Particularly, we are interested in the relationship between the average education level in each country and the level of democracy in that country. What is the primary and foreign data in this study? How will you combine the two data?**

    ```{r}
    #Type your code here
    ```

## Part 2. Writing Your Own Functions

Please use the joined data ***ESS_Polity*** in Part 1 and write a function to complete all the following tasks:

\(1\) Estimate the range, average, and standard deviation of any given numeric-type (double or integer) columns.

\(2\) Estimate the number of NAs and the number of unique values of any given column.

\(3\) Test your function with any four columns of your choice.

```{r}
#Type your code here
```

## Part 3. Practicing String Functions with Babynames

1.  **Import the babynames data:**

```{r}
#Type your code here
```

2.  **Use different stirng functions to answer the following questions:**

    \(1\) Find the longest name using [count()](https://dplyr.tidyverse.org/reference/count.html) and a string function.

    \(2\) Use a string function to detect if the following names are present in the data:

    "Ronaldo", "Messi", "Wayne", "Clarck", "Rick", and "Morty".

    \(3\) Create a column *LastName* with just one value, "LastName". Next, create another column *FullName,* by combing the strings of columns *name* and LastName, separating by a period. For example, a value in this new column should be like "Jacky.LastName".

    \(4\) Find all "Elizabeth" in the data and replace "Elizabeth" with "Liz".

```{r}
#Type your code here
```

## Part 4. Clean data with import and string functions

As mentioned in the last Challenge, the original version of the survey on attitudes toward Same-Sex Marriage in Australia is raw and untidy data. You can open it in Excel and take a look at it.

The provided table includes estimates of the proportion of citizens choosing each of the four options, aggregated by Federal Electoral District, which are nested within one of 8 overarching Electoral Divisions.

In this case, we are going to identify the desired structure early in the process because clever naming of variables makes it much easier for later analysis. We will skip reading in redundant data (proportions and "totals" columns), and then can identify four potentially distinct pieces of information. Three grouping variables: *Division* (in column 1), *District* (also in column 1), and citizen *Response* (yes, no, unclear, and non-response), plus one value: aggregated response *Count*.

The ultimate goal is to use all the import and string functions we learned to generate data that looks like the data austrlia_data.csv we used in Challenge#2.

The data cleaning process should follow the following two steps. (Tips: some functions you will be using: `mutate()`,`starts_with()`, `str_detect()`, `str_starts()`) `str_ends()`, `str_detect()`, [`fill()`](https://tidyr.tidyverse.org/reference/fill.html)).

1.  Read in data, skipping unneeded columns and renaming variables.

    ```{r}
    #Type your code here
    ```

2.  Create *Division* and *District* variables using `separate()` and `fill().` You will also use string functions to help you.

    ```{r}
    #Type your code here
    ```
